#Execution of CGI scripts using mod_cgi is permitted.
ExecCGI


#The server will follow symbolic links in this directory.
FollowSymLinks


#When the server finds an .htaccess file (as specified by AccessFileName) it needs to know which directives declared in that file can override earlier configuration directives.
AllowOverride

#AllowOverride is valid only in <Directory> sections specified without regular expressions, not in <Location>, <DirectoryMatch> or <Files> sections.

#Example:

#AllowOverride AuthConfig Indexes
#AllowOverride All
#AllowOverride None



<Directory /var/www/payments.ambergames.my>
        Options -Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order allow,deny
        allow from 127.0.0.1
</Directory>

<Directory /var/www/payments.ambergames.my>
        Options -Indexes FollowSymLinks MultiViews
        AllowOverride All
        Order deny, allow
        deny from all
        allow from 127.0.0.1
</Directory>

#The Order directive, along with the Allow and Deny directives, controls a three-pass access control system. The first pass processes either all Allow or all Deny directives, as specified by the Order directive. The second pass parses the rest of the directives (Deny or Allow). The third pass applies to all requests which do not match either of the first two.

#Note that all Allow and Deny directives are processed, unlike a typical firewall, where only the first match is used
#. The last match is effective (also unlike a typical firewall). Additionally, the order in which lines appear in the configuration files is not significant -- all Allow lines are processed as one group, all Deny lines are considered as another, and the default state is considered by itself.

#Allow,Deny
#First, all Allow directives are evaluated; at least one must match, or the request is rejected. Next,
#all Deny directives are evaluated. If any matches, the request is rejected. Last, any requests which do not match an Allow or a Deny directive are DENIED by default.
#Deny,Allow
#First, all Deny directives are evaluated; if any match, the request is denied unless it also matches an Allow directive. Any requests which do not match any Allow or Deny directives are PERMITTED.
#Mutual-failure
#This order has the same effect as Order Allow,Deny and is deprecated in its favor.

#Multiviews
#MultiViews is a per-directory option, meaning it can be set with an Options directive within a <Directory>, <Location> or <Files> section in httpd.conf, or (if AllowOverride is properly set) in .htaccess files. Note that Options All does not set MultiViews; you have to ask for it by name.

#The effect of MultiViews is as follows: if the server receives a request for /some/dir/foo, if /some/dir has MultiViews enabled, and /some/dir/foo does not exist, then the server reads the directory looking for files named foo.*, and effectively fakes up a type map which names all those files, assigning them the same media types and content-encodings it would have if the client had asked for one of them by name. It then chooses the best match to the client's requirements.

#MultiViews may also apply to searches for the file named by the DirectoryIndex directive, if the server is trying to index a directory. If the configuration files specify

#DirectoryIndex index
#then the server will arbitrate between index.html and index.html3 if both are present. If neither are present, and index.cgi is there, the server will run it.

#If one of the files found when reading the directory does not have an extension recognized by mod_mime to designate its Charset, Content-Type, Language, or Encoding, then the result depends on the setting of the MultiViewsMatch directive. This directive determines whether handlers, filters, and other extension types can participate in MultiViews negotiation.